apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: service-provider-integration-operator
    app.kubernetes.io/part-of: service-provider-integration-operator
  name: accesstokensecrets.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: AccessTokenSecret
    listKind: AccessTokenSecretList
    plural: accesstokensecrets
    shortNames:
    - ats
    singular: accesstokensecret
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AccessTokenSecret is the Schema for the accesstokensecrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AccessTokenSecretSpec defines the desired state of AccessTokenSecret
            properties:
              accessTokenName:
                description: AccessTokenName is the ID of the access token in the
                  storage
                type: string
              target:
                description: Target specifies the object to which the access token
                  should be persisted
                properties:
                  configMap:
                    description: ConfigMap describes the configmap in which the data
                      should be stored. The configmap will always be created in the
                      same namespace as the AccessTokenSecret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the keys and values that the create
                          configmap should be annotated with.
                        type: object
                      fields:
                        description: Fields specifies the mapping from the token record
                          fields to the keys in the configmap data.
                        properties:
                          expiredAfter:
                            description: ExpiredAfter specifies the data key in which
                              the expiry date of the token should be stored.
                            type: string
                          name:
                            description: Name specifies the data key in which the
                              name of the token record should be stored.
                            type: string
                          scopes:
                            description: Scopes specifies the data key in which the
                              comma-separated list of token scopes should be stored.
                            type: string
                          serviceProviderUrl:
                            description: ServiceProviderUrl specifies the data key
                              in which the url of the service provider should be stored.
                            type: string
                          serviceProviderUserId:
                            description: ServiceProviderUserId specifies the data
                              key in which the url of the user id used in the service
                              provider should be stored.
                            type: string
                          serviceProviderUserName:
                            description: ServiceProviderUserName specifies the data
                              key in which the url of the user name used in the service
                              provider should be stored.
                            type: string
                          token:
                            description: Token specifies the data key in which the
                              token should be stored.
                            type: string
                          userId:
                            description: UserId specifies the data key in which the
                              user id as known to the SPI should be stored (note that
                              this is usually different from ServiceProviderUserId,
                              because the former is usually a kubernetes user, while
                              the latter is some arbitrary ID used by the service
                              provider which might or might not correspond to the
                              Kubernetes user id).
                            type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels contains the labels that the created configmap
                          should be labeled with.
                        type: object
                      name:
                        description: Name is the name of the configmap to be created.
                        type: string
                    required:
                    - fields
                    - name
                    type: object
                  containers:
                    description: Containers describes the pods/containers into which
                      the data should be injected. THIS IS CURRENTLY NOT SUPPORTED.
                    properties:
                      containers:
                        items:
                          type: string
                        type: array
                      mountPath:
                        type: string
                      podLabels:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                    required:
                    - containers
                    - mountPath
                    - podLabels
                    type: object
                  secret:
                    description: Secret describes the secret in which the data should
                      be stored. The secret will always be created in the same namespace
                      as the AccessTokenSecret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the keys and values that the create
                          secret should be annotated with.
                        type: object
                      fields:
                        description: Fields specifies the mapping from the token record
                          fields to the keys in the secret data.
                        properties:
                          expiredAfter:
                            description: ExpiredAfter specifies the data key in which
                              the expiry date of the token should be stored.
                            type: string
                          name:
                            description: Name specifies the data key in which the
                              name of the token record should be stored.
                            type: string
                          scopes:
                            description: Scopes specifies the data key in which the
                              comma-separated list of token scopes should be stored.
                            type: string
                          serviceProviderUrl:
                            description: ServiceProviderUrl specifies the data key
                              in which the url of the service provider should be stored.
                            type: string
                          serviceProviderUserId:
                            description: ServiceProviderUserId specifies the data
                              key in which the url of the user id used in the service
                              provider should be stored.
                            type: string
                          serviceProviderUserName:
                            description: ServiceProviderUserName specifies the data
                              key in which the url of the user name used in the service
                              provider should be stored.
                            type: string
                          token:
                            description: Token specifies the data key in which the
                              token should be stored.
                            type: string
                          userId:
                            description: UserId specifies the data key in which the
                              user id as known to the SPI should be stored (note that
                              this is usually different from ServiceProviderUserId,
                              because the former is usually a kubernetes user, while
                              the latter is some arbitrary ID used by the service
                              provider which might or might not correspond to the
                              Kubernetes user id).
                            type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels contains the labels that the created secret
                          should be labeled with.
                        type: object
                      name:
                        description: Name is the name of the secret to be created.
                        type: string
                      type:
                        description: Type is the type of the secret to be created.
                          If left empty, the default type used in the cluster is assumed
                          (typically Opaque). The type of the secret defines the automatic
                          mapping of the token record fields to keys in the secret
                          data according to the documentation https://kubernetes.io/docs/concepts/configuration/secret/#secret-types.
                          Only kubernetes.io/service-account-token, kubernetes.io/dockercfg,
                          kubernetes.io/dockerconfigjson and kubernetes.io/basic-auth
                          are supported. All other secret types need to have their
                          mapping specified manually using the Fields.
                        type: string
                    required:
                    - name
                    type: object
                type: object
            required:
            - accessTokenName
            - target
            type: object
          status:
            description: AccessTokenSecretStatus defines the observed state of AccessTokenSecret
            properties:
              message:
                description: Message is the error message describing the reason for
                  a failure.
                type: string
              objectRef:
                description: ObjectRef stores the information about the object into
                  which the token information has been injected This field is filled
                  in only if the `Phase` is "Injected".
                properties:
                  apiVersion:
                    description: ApiVersion is the api version of the object with
                      the injected data.
                    type: string
                  kind:
                    description: Kind is the kind of the object with the injected
                      data.
                    type: string
                  name:
                    description: Name is the name of the object with the injected
                      data. This always lives in the same namespace as the AccessTokenSecret
                      object.
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              phase:
                description: 'Phase describes the state in which the process of retrieving
                  the secret data currently is. Possible values are: Retrieving, Injecting,
                  Injected or Failed. The final states are either Injected or Failed.'
                type: string
              reason:
                description: 'If the phase is Failed, this field describes the reason
                  for the failure. Possible values are: SPIClientSetup, TokenRetrieval,
                  Injection.'
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
