
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: accesstokensecrets.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: AccessTokenSecret
    listKind: AccessTokenSecretList
    plural: accesstokensecrets
    shortNames:
    - ats
    singular: accesstokensecret
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AccessTokenSecret is the Schema for the accesstokensecrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AccessTokenSecretSpec defines the desired state of AccessTokenSecret
            properties:
              accessTokenName:
                description: AccessTokenName is the ID of the access token in the
                  storage
                type: string
              target:
                description: Target specifies the object to which the access token
                  should be persisted
                properties:
                  configMap:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      fields:
                        properties:
                          expiredAfter:
                            type: string
                          name:
                            type: string
                          scopes:
                            type: string
                          serviceProviderUrl:
                            type: string
                          serviceProviderUserId:
                            type: string
                          serviceProviderUserName:
                            type: string
                          token:
                            type: string
                          userId:
                            type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      name:
                        type: string
                    required:
                    - fields
                    - name
                    type: object
                  containers:
                    properties:
                      containers:
                        items:
                          type: string
                        type: array
                      mountPath:
                        type: string
                      podLabels:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                    required:
                    - containers
                    - mountPath
                    - podLabels
                    type: object
                  secret:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      fields:
                        properties:
                          expiredAfter:
                            type: string
                          name:
                            type: string
                          scopes:
                            type: string
                          serviceProviderUrl:
                            type: string
                          serviceProviderUserId:
                            type: string
                          serviceProviderUserName:
                            type: string
                          token:
                            type: string
                          userId:
                            type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      name:
                        type: string
                      type:
                        type: string
                    required:
                    - name
                    type: object
                type: object
            required:
            - accessTokenName
            - target
            type: object
          status:
            description: AccessTokenSecretStatus defines the observed state of AccessTokenSecret
            properties:
              message:
                type: string
              objectRef:
                description: ObjectRef stores the information about the object into
                  which the token information has been injected This field is filled
                  in only if the `Phase` is "Injected".
                properties:
                  apiVersion:
                    description: ApiVersion is the api version of the object with
                      the injected data.
                    type: string
                  kind:
                    description: Kind is the kind of the object with the injected
                      data.
                    type: string
                  name:
                    description: Name is the name of the object with the injected
                      data. This always lives in the same namespace as the AccessTokenSecret
                      object.
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              phase:
                type: string
              reason:
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
